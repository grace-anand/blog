---
import { CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import TableOfContents from '../../components/navigation/right-sidebar/TableOfContents';
import generateToc from '../../lib/utils/generateToc';

export async function getStaticPaths() {
	const posts = await getCollection(
		'blog',
		({ data }) => process.env.NODE_ENV !== 'production' || !data.draft
	);
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content, headings } = await post.render();
---
{
	post.data.draft && (
		<div class="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4" role="alert">
			<p class="font-bold">Warning</p>
			<p>This post is not published yet.</p>
		</div>
	)
}
<BlogPost {...post.data}>
	<h1 id="overview">{post.data.title}</h1>
	<div class="flex">
		<div>
			{
				headings && (
					<TableOfContents
						client:media="(min-width: 50em)"
						toc={generateToc(headings, 'overview')}
						labels={{ onThisPage: 'TableOfContents' }}
						isMobile={false}
					/>
				)
			}
		</div>
		<div class="something"><Content /></div>
	</div>
</BlogPost>
