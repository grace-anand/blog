---
import { type CollectionEntry, getCollection, getEntry } from 'astro:content';
import BaseLayout from '@layouts/BaseLayout.astro';
import RightSideBar from '@components/navigation/right-sidebar/index.astro';
import LeftSideBar from '@components/navigation/left-sidebar/index.astro';
import Tag from '@components/post/Tag.astro';
import PostDetails from '@components/post/PostDetails.astro';
import ShareSection from '@components/navigation/right-sidebar/ShareSection.astro';
import TableOfContents from '@components/navigation/right-sidebar/TableOfContents';
import generateToc from '@lib/utils/generateToc';

export async function getStaticPaths() {
  const posts = await getCollection(
    'blog',
    ({ data }) => process.env.NODE_ENV !== 'production' || !data.draft
  );
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

const posts = await getCollection(
  'blog',
  ({ data }) => process.env.NODE_ENV !== 'production' || !data.draft
);
const post = Astro.props;
const tags = await Promise.all(post.data.tags?.map(async (tag) => (await getEntry(tag))?.data) || []);
const { Content, headings } = await post.render();
---
{
	post.data.draft && (
		<div class="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4" role="alert">
			<p class="font-bold">Warning</p>
			<p>This post is not published yet.</p>
		</div>
	)
}
<BaseLayout {...post.data} image={post.data.title + '.png'} className='flex justify-evenly mx-4'>
	<aside class="hidden xl:block min-w-[200px] pr-3">
		<div class="sticky top-5">
			<LeftSideBar posts={posts} />
		</div>
	</aside>
	<article class="markdown max-w-7xl">
    <img src={post.data.heroImage} alt="post hero" class="w-full min-h-[100px] md:min-h-[200px] lg:min-h[300px]" transition:name={post.slug}>
		<h1 id="overview" class="text-4xl">{post.data.title}</h1>
    <PostDetails pubTimestamp='2 hours ago'/>
    <div class="flex">{ tags.map((tag) => (<Tag tag={tag} />)) }</div>
    <TableOfContents
      toc={generateToc(headings, 'Overview')}
      labels={{ onThisPage: 'Table Of Contents' }}
      isMobile={true}
      client:media="(max-width: 1024px)"
    />
		<Content />
    <ShareSection class="flex lg:hidden" />
	</article>
	<aside class="hidden lg:block min-w-[200px] pl-3">
		<div class="sticky top-5">
			<RightSideBar headings={headings} />
		</div>
	</aside>
</BaseLayout>

<script>
  const copySVG = `<svg width="1.3em" height="1.3em" viewBox="0 0 256 256"><path fill="currentColor" d="M216 36H88a4 4 0 0 0-4 4v44H40a4 4 0 0 0-4 4v128a4 4 0 0 0 4 4h128a4 4 0 0 0 4-4v-44h44a4 4 0 0 0 4-4V40a4 4 0 0 0-4-4Zm-52 176H44V92h120Zm48-48h-40V88a4 4 0 0 0-4-4H92V44h120Z"/></svg>`;

  let blocks = document.querySelectorAll("pre");
  blocks.forEach((block) => {
    block.className = "relative flex w-full";

    let copyButton = document.createElement("button");
    copyButton.className =
      "inline-flex absolute right-[.45em] top-[.5em] bg-zinc-100/20 rounded px-1 py-1 text-sm text-zinc-50 hover:bg-zinc-100/25 focus:outline-none focus:shadow-outline text-brand-primary";
    copyButton.innerHTML = copySVG;
    copyButton.addEventListener("click", () => {
      let text = "";
      const pre = copyButton.parentElement;
      let code = pre?.querySelector("code");
      if (code) {
        text = code.innerText;
      } else {
        const span = pre?.querySelector("span");
        if (span) {
          text = span.innerText;
        }
      }
      if (text) {
        try {
          navigator.clipboard.writeText(text);
        } catch (err) {
          console.error("Failed to copy: ", err);
        }
        copyButton.innerHTML = `<svg width="1.3em" height="1.3em" viewBox="0 0 256 256"><path fill="#22c55e" d="M104 192a8.5 8.5 0 0 1-5.7-2.3l-56-56a8.1 8.1 0 0 1 11.4-11.4l50.3 50.4L210.3 66.3a8.1 8.1 0 0 1 11.4 11.4l-112 112a8.5 8.5 0 0 1-5.7 2.3Z"/></svg>`;

        setTimeout(() => {
          copyButton.innerHTML = copySVG;
        }, 1000);
      }
    });

    block.appendChild(copyButton);
    block.setAttribute("tabindex", "0");
  });
</script>
